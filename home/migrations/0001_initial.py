# Generated by Django 4.2.11 on 2024-05-13 18:59

import autoslug.fields
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import froala_editor.fields
import home.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contrib', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('circles', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Copyright',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created At')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('name', models.CharField(max_length=300)),
                ('is_verified', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ('-created_at',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('DatePublished', models.DateTimeField(default=django.utils.timezone.now)),
                ('content', froala_editor.fields.FroalaField(blank=True, null=True, verbose_name='Content')),
                ('picture', models.ImageField(blank=True, default=None, null=True, upload_to='posts/image_post_file')),
                ('title', models.CharField(blank=True, max_length=100, null=True, verbose_name='Title')),
                ('Audio_file', models.FileField(blank=True, null=True, upload_to='post/audio_post_file', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['wav', 'aif', 'mp3', 'mid', '.opus', 'flac'])], verbose_name='audio')),
                ('Video_file', models.FileField(blank=True, null=True, upload_to='post/video_post_file', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['mp4', 'avi', 'wmv', 'mov', '3gp', 'flv', 'webm'])], verbose_name='video')),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from='title', unique=True)),
                ('edited', models.DateTimeField(auto_now_add=True)),
                ('active', models.BooleanField(default=True)),
                ('hidden', models.BooleanField(default=False)),
                ('date_hidden', models.DateTimeField(blank=True, null=True)),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('video_gif', models.FileField(blank=True, null=True, upload_to='post/gifs/')),
                ('is_pornographic', models.BooleanField(default=False)),
                ('is_downloadable', models.BooleanField(default=False)),
                ('is_question', models.BooleanField(default=False)),
                ('angry', models.ManyToManyField(blank=True, related_name='%(app_label)s_angry_%(class)s', related_query_name='%(app_label)s_angry_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('author', home.models.CustomFK(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s', to=settings.AUTH_USER_MODEL)),
                ('forum', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='post_forum', to='circles.forum')),
                ('haha', models.ManyToManyField(blank=True, related_name='%(app_label)s_haha_%(class)s', related_query_name='%(app_label)s_haha_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('hidden_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='post_who_hid', to=settings.AUTH_USER_MODEL)),
                ('like', models.ManyToManyField(blank=True, related_name='%(app_label)s_likes_%(class)s', related_query_name='%(app_label)s_likes_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('love', models.ManyToManyField(blank=True, related_name='%(app_label)s_love_%(class)s', related_query_name='%(app_label)s_love_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('post', home.models.CustomFK(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s', to='home.post')),
                ('post_notify_people', models.ManyToManyField(blank=True, related_name='post_notified_users', to=settings.AUTH_USER_MODEL)),
                ('sad', models.ManyToManyField(blank=True, related_name='%(app_label)s_sad_%(class)s', related_query_name='%(app_label)s_sad_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('share_pointer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='shared_post', to='home.post')),
                ('shared', models.ManyToManyField(blank=True, related_name='%(app_label)s_shared_%(class)s', related_query_name='%(app_label)s_shared_%(class)s', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-edited',),
            },
        ),
        migrations.CreateModel(
            name='Sound',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created At')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('sound_file', models.FileField(upload_to='uploads/sounds/')),
                ('sound_cover', models.ImageField(blank=True, null=True, upload_to='uploads/cover/')),
                ('is_extracted_audio', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ('-created_at',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SoundCategory',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created At')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('name', models.CharField(max_length=300)),
                ('icon', models.ImageField(blank=True, null=True, upload_to='system/')),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'ordering': ('-created_at',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Space',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from='name', unique=True)),
                ('details', froala_editor.fields.FroalaField(blank=True, null=True, verbose_name='Space Details')),
                ('icon', models.CharField(blank=True, max_length=100, null=True)),
                ('enable', models.BooleanField(default=True)),
                ('meta_title', models.CharField(blank=True, max_length=200, null=True)),
                ('meta_keywords', models.CharField(blank=True, help_text='Comma-delimited set of SEO keywords for meta tag', max_length=255, null=True)),
                ('meta_description', models.CharField(blank=True, help_text='Content for description meta tag', max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Update',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created At')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from='user', unique=True)),
                ('active', models.BooleanField(default=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('media', models.FileField(blank=True, null=True, upload_to=home.models.get_update_upload_path)),
                ('video_gif', models.FileField(blank=True, null=True, upload_to='updates/gifs/')),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('hidden', models.BooleanField(default=False)),
                ('date_hidden', models.DateTimeField(blank=True, null=True)),
                ('is_pornographic', models.BooleanField(default=False)),
                ('hidden_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='update_who_hid', to=settings.AUTH_USER_MODEL)),
                ('sound', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='home.sound')),
                ('tag_users', models.ManyToManyField(blank=True, related_name='tag_users', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-created_at',),
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='sound',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='home.soundcategory'),
        ),
        migrations.AddField(
            model_name='sound',
            name='copyright',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='home.copyright'),
        ),
        migrations.AddField(
            model_name='sound',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Share',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_posted', models.DateTimeField(auto_now_add=True)),
                ('posts', models.ManyToManyField(blank=True, to='home.post')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SavedPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('post', models.ManyToManyField(related_name='s_post', to='home.post')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sp_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PostFiles',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('DatePublished', models.DateTimeField(default=django.utils.timezone.now)),
                ('media', models.FileField(blank=True, null=True, upload_to=home.models.get_post_upload_path)),
                ('angry', models.ManyToManyField(blank=True, related_name='%(app_label)s_angry_%(class)s', related_query_name='%(app_label)s_angry_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('author', home.models.CustomFK(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s', to=settings.AUTH_USER_MODEL)),
                ('haha', models.ManyToManyField(blank=True, related_name='%(app_label)s_haha_%(class)s', related_query_name='%(app_label)s_haha_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('like', models.ManyToManyField(blank=True, related_name='%(app_label)s_likes_%(class)s', related_query_name='%(app_label)s_likes_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('love', models.ManyToManyField(blank=True, related_name='%(app_label)s_love_%(class)s', related_query_name='%(app_label)s_love_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('post', home.models.CustomFK(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s', to='home.post')),
                ('sad', models.ManyToManyField(blank=True, related_name='%(app_label)s_sad_%(class)s', related_query_name='%(app_label)s_sad_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('shared', models.ManyToManyField(blank=True, related_name='%(app_label)s_shared_%(class)s', related_query_name='%(app_label)s_shared_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('wow', models.ManyToManyField(blank=True, related_name='%(app_label)s_wow_%(class)s', related_query_name='%(app_label)s_wow_%(class)s', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-DatePublished'],
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='post',
            name='sound',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='home.sound'),
        ),
        migrations.AddField(
            model_name='post',
            name='space',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='home.space'),
        ),
        migrations.AddField(
            model_name='post',
            name='uploaded_location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contrib.postlocation'),
        ),
        migrations.AddField(
            model_name='post',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='post',
            name='wow',
            field=models.ManyToManyField(blank=True, related_name='%(app_label)s_wow_%(class)s', related_query_name='%(app_label)s_wow_%(class)s', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='PostView',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created At')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.post')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'post')},
            },
        ),
        migrations.AddIndex(
            model_name='post',
            index=models.Index(fields=['edited', 'id'], name='home_post_edited_e2e60c_idx'),
        ),
        migrations.AddIndex(
            model_name='post',
            index=models.Index(fields=['-edited', '-id'], name='home_post_edited_2778c7_idx'),
        ),
    ]
